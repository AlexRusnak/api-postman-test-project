{
	"info": {
		"_postman_id": "2e24054e-5fd3-49da-800a-9f37c301f8c1",
		"name": "O.Rusnak Trello UDEMY REFACTORED",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "1382166"
	},
	"item": [
		{
			"name": "Create a board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();\r",
							"pm.environment.set(\"boardID\", jsonData.id);\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Board is created\", function () {\r",
							"    pm.expect(jsonData.name).to.eql(pm.environment.get(\"boardName\"));\r",
							"    pm.expect(jsonData.closed).to.eql(false);\r",
							"    pm.environment.unset(\"boardName\");\r",
							"});\r",
							"\r",
							"pm.test(\"Board is private\", function () {\r",
							"    pm.expect(jsonData.prefs.permissionLevel).to.eql(\"private\");\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const boardName = \"My New Board \" + parseInt(Math.random() * 1000);\r",
							"pm.environment.set(\"boardName\", boardName);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseTrelloURL}}/1/boards/?name={{boardName}}&key={{trelloKey}}&token={{trelloToken}}&defaultLists=false",
					"host": [
						"{{baseTrelloURL}}"
					],
					"path": [
						"1",
						"boards",
						""
					],
					"query": [
						{
							"key": "name",
							"value": "{{boardName}}"
						},
						{
							"key": "key",
							"value": "{{trelloKey}}"
						},
						{
							"key": "token",
							"value": "{{trelloToken}}"
						},
						{
							"key": "defaultLists",
							"value": "false"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a List - TODO",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();\r",
							"pm.environment.set(\"toDoListID\", jsonData.id);\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"List is TODO\", function () {\r",
							"    pm.expect(jsonData.name).to.eql(\"TODO\");\r",
							"});\r",
							"\r",
							"pm.test(\"List is not closed\", function () {\r",
							"    pm.expect(jsonData.closed).to.eql(false);\r",
							"});\r",
							"\r",
							"pm.test(\"List is created in desired board\", function () {\r",
							"    pm.expect(jsonData.idBoard).to.eql(pm.environment.get(\"boardID\"));\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseTrelloURL}}/1/lists?name=TODO&key={{trelloKey}}&token={{trelloToken}}&defaultLists=false&idBoard={{boardID}}",
					"host": [
						"{{baseTrelloURL}}"
					],
					"path": [
						"1",
						"lists"
					],
					"query": [
						{
							"key": "name",
							"value": "TODO"
						},
						{
							"key": "key",
							"value": "{{trelloKey}}"
						},
						{
							"key": "token",
							"value": "{{trelloToken}}"
						},
						{
							"key": "defaultLists",
							"value": "false"
						},
						{
							"key": "idBoard",
							"value": "{{boardID}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a Card in TODO",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();\r",
							"pm.environment.set(\"cardID\", jsonData.id);\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Card name is Learn Postman\", function () {\r",
							"    pm.expect(jsonData.name).to.eql(\"Learn Postman\");\r",
							"});\r",
							"\r",
							"pm.test(\"Card is created in desired list\", function () {\r",
							"    pm.expect(jsonData.idList).to.eql(pm.environment.get(\"toDoListID\"));\r",
							"    pm.environment.unset(\"toDoListID\");\r",
							"});\r",
							"\r",
							"pm.test(\"Card is created in desired Board\", function () {\r",
							"    pm.expect(jsonData.idBoard).to.eql(pm.environment.get(\"boardID\"));\r",
							"});\r",
							"\r",
							"pm.test(\"Card has not votes and no attachments\", function () {\r",
							"    pm.expect(jsonData.attachments.length).to.eql(0);\r",
							"    pm.expect(jsonData.badges.votes).to.eql(0);\r",
							"});\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseTrelloURL}}/1/cards?key={{trelloKey}}&token={{trelloToken}}&name=Learn Postman&idList={{toDoListID}}",
					"host": [
						"{{baseTrelloURL}}"
					],
					"path": [
						"1",
						"cards"
					],
					"query": [
						{
							"key": "key",
							"value": "{{trelloKey}}"
						},
						{
							"key": "token",
							"value": "{{trelloToken}}"
						},
						{
							"key": "name",
							"value": "Learn Postman"
						},
						{
							"key": "idList",
							"value": "{{toDoListID}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a List - DONE",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();\r",
							"pm.environment.set(\"doneListID\", jsonData.id);\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"List is DONE\", function () {\r",
							"    pm.expect(jsonData.name).to.eql(\"DONE\");\r",
							"});\r",
							"\r",
							"pm.test(\"List is not closed\", function () {\r",
							"    pm.expect(jsonData.closed).to.eql(false);\r",
							"});\r",
							"\r",
							"pm.test(\"List is created in expected board\", function () {\r",
							"    pm.expect(jsonData.idBoard).to.eql(pm.environment.get(\"boardID\"));\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseTrelloURL}}/1/lists?name=DONE&key={{trelloKey}}&token={{trelloToken}}&defaultLists=false&idBoard={{boardID}}",
					"host": [
						"{{baseTrelloURL}}"
					],
					"path": [
						"1",
						"lists"
					],
					"query": [
						{
							"key": "name",
							"value": "DONE"
						},
						{
							"key": "key",
							"value": "{{trelloKey}}"
						},
						{
							"key": "token",
							"value": "{{trelloToken}}"
						},
						{
							"key": "defaultLists",
							"value": "false"
						},
						{
							"key": "idBoard",
							"value": "{{boardID}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Move a Card to DONE",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Name is Learn Postman\", function () {\r",
							"    pm.expect(jsonData.name).to.eql(\"Learn Postman\");\r",
							"});\r",
							"\r",
							"pm.test(\"Card was moved to desired list\", function () {\r",
							"    pm.expect(jsonData.idList).to.eql(pm.environment.get(\"doneListID\"));\r",
							"    pm.environment.unset(\"doneListID\");\r",
							"    pm.environment.unset(\"cardID\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{baseTrelloURL}}/1/cards/{{cardID}}?key={{trelloKey}}&token={{trelloToken}}&idList={{doneListID}}",
					"host": [
						"{{baseTrelloURL}}"
					],
					"path": [
						"1",
						"cards",
						"{{cardID}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{trelloKey}}"
						},
						{
							"key": "token",
							"value": "{{trelloToken}}"
						},
						{
							"key": "idList",
							"value": "{{doneListID}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete a board",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseTrelloURL}}/1/boards/{{boardID}}?key={{trelloKey}}&token={{trelloToken}}",
					"host": [
						"{{baseTrelloURL}}"
					],
					"path": [
						"1",
						"boards",
						"{{boardID}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{trelloKey}}"
						},
						{
							"key": "token",
							"value": "{{trelloToken}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Check if board is deleted",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Deleted board does not exists, status = 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.environment.unset(\"boardID\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseTrelloURL}}/1/boards/{{boardID}}?key={{trelloKey}}&token={{trelloToken}}",
					"host": [
						"{{baseTrelloURL}}"
					],
					"path": [
						"1",
						"boards",
						"{{boardID}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{trelloKey}}"
						},
						{
							"key": "token",
							"value": "{{trelloToken}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all Boards - Delete if any open",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let jsonData = pm.response.json()\r",
							"console.log(jsonData[1].id);\r",
							"\r",
							"for (let boardObject of jsonData) {\r",
							"    if (boardObject.closed === false) {\r",
							"        pm.environment.set(\"boardID\", boardObject.id);\r",
							"        postman.setNextRequest(\"Delete a board\");\r",
							"        //console.log(boardObject.id);\r",
							"    }\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseTrelloURL}}/1/members/{{userID}}/boards?token={{trelloToken}}&key={{trelloKey}}",
					"host": [
						"{{baseTrelloURL}}"
					],
					"path": [
						"1",
						"members",
						"{{userID}}",
						"boards"
					],
					"query": [
						{
							"key": "token",
							"value": "{{trelloToken}}"
						},
						{
							"key": "key",
							"value": "{{trelloKey}}"
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}